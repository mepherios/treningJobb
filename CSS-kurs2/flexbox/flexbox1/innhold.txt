2 Typer flexbox elementer
1: flex container
2: flex items
Alle barn av flex container er flex items.

Får å designere et element til en flex container sett display til flex eller inline-flex.
Flex brukes for å fikse posisjonene til elementer på en side.

Når en gitt div har en spesifikk flex vil elementene i denne oppføre seg annerledes.

En flexbox vil overstyre sine barn sin størrelse for å passe inn i flex-containeren.


justify-content: flex-start;

justify-content brukes for å styre oppførselen til mellomrom mellom flex children/elementer. 

align items, gjør det mulig å flexe vertikalt. Standarden er at den gjør dette med mindre en maks eller spesifikk høyde er gitt.

Flex items blir skalert proprsjonalt med flex containeren når elementene i containeren er for store.
Motsatt, når elementene er for små blir de ikke skalert opp så vi bruker flex-grow for å få dette til å skje.

flex-shrink kan stille inn hvor mye et element skal proprsjonalt krympes.

flex-basis som gir start verdi i pixler for skalering.
brukes sammen med flex-grow. flex-shrink. 
forkortelse kan gjøres med, 
flex: 2 1 150px; 
definerer som grow-shrink-basis (pixler)

kan også definere kun grow, shrink med
flex: 2 1;

kan også sette flex-grow og flex-basis med
flex: 2 50px;

Kan ikke definere flew-shrink flex-basis med kun 2 verdier.

flex-wrap gjør istede for skalering fyller heller ny linje med tekst eksempell istede for å skalere ned text størrelse.

flex-wrap: wrap; 
sender element til neste linje hvis det blir utfylt.

flex-wrap: nowrap;
gjør kun flex shrink.

flex-wrap: wrap-reverse; 
gjør som wrap bare reversert, så gitt 5 elementer er nr 5 nr 1, og de fleste elementene er på bunnen istede for toppen.

gitt dette kan vi bruke justify-content: space-around; 
som gjør at elementene starter fra midten.

align-content legger elementene i forhold til flex containeren. 

align-content: flex-start;
gir alignment i starten av containeren.

align-content: flex-end;
gir alignment i slutten

align-content: center;
gir alignment i midten av containeren.

align-content: space-between; 
gir alignment fra start, end.

align-content: space-around;
gir for linjene, gjennomsnittet fra start, midtpunktet og legger elementer i center her.

align-content: stretch; er basen. i koden er denne ikke gitt men er kalt, gjør ingenting siden den blir fremdeles inkludert.


alle disse har kun vært stretch vertikalt og wrap horizontalt. 
Vi kan bytte ut aksene med flex-direction. gitt vi har property flex-direction, value column da får vi ordering vertikalt istede for horisontalt.

gitt flex-grow, vil verdiene vokse horisontalt som betyr rettningen er byttet når en kolumn og flex-direction er brukt.

flex-flow er forkortelsen på lik linje med flex og fyngerer på følgende måte:

flex-flow: column wrap;
=
flex-direction: column;
flex-wrap: wrap;

Review: Flexbox

You should be proud of yourself! You have learned the most important properties of flexbox. Flexbox is an art and a science; you can use it to make laying out multiple elements a piece of cake. You know everything necessary to begin using it in your own projects.

    display: flex changes an element to a block-level container with flex items inside of it.
    display: inline-flex allows multiple flex containers to appear inline with each other.
    justify-content is used to space items along the main axis.
    align-items is used to space items along the cross axis.
    flex-grow is used to specify how much space (and in what proportions) flex items absorb along the main axis.
    flex-shrink is used to specify how much flex items shrink and in what proportions along the main axis.
    flex-basis is used to specify the initial size of an element styled with flex-grow and/or flex-shrink.
    flex is used to specify flex-grow, flex-shrink, and flex-basis in one declaration.
    flex-wrap specifies that elements should shift along the cross axis if the flex container is not large enough.
    align-content is used to space rows along the cross axis.
    flex-direction is used to specify the main and cross axes.
    flex-flow is used to specify flex-wrap and flex-direction in one declaration.
    Flex containers can be nested inside of each other by declaring display: flex or display: inline-flex for children of flex containers.
